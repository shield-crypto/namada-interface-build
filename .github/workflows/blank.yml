name: Check & Build Namadillo (with Input)

on:
#  schedule:
#    - cron: "0 * * * *"  # Runs every hour
  workflow_dispatch:
    inputs:
      force_build:
        description: "Force the build, ignoring the last tag check"
        required: false
        default: "false"
        type: choice
        options:
          - "true"
          - "false"
      build_tag:
        description: 'A tag of the Namadillo source to use (otherwise latest is used)'
        default: ''
        required: false
        type: string

  push:
    tags:
      - "namadillo@*"

env:
  INDEXER_URL: https://namada-indexer.shield-crypto.com
  RPC_URL: https://namada-public-rpc.shield-crypto.com
  MASP_URL: https://namada-public-masp.shield-crypto.com
  CHAIN_ID: namada.5f5de2dd1b88cba30586420

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history to check tags
          ssh-key: ${{ secrets.GH_PAT }}
      - name: Load last processed tag
        id: load-last-tag
        run: |
          if [[ -f .github/last_tag.txt ]]; then
            LAST_TAG=$(cat .github/last_tag.txt)
            echo "LAST_TAG=$LAST_TAG" >> $GITHUB_ENV
          else
            echo "LAST_TAG=" >> $GITHUB_ENV
          fi
          echo "Loaded Last Processed Tag. LAST_TAG=" 
      - name: Clone Namada repository
        uses: actions/checkout@v4
        with:
            repository: anoma/namada-interface
            fetch-depth: 0  # Fetch all history and tags
            path: source-repo
  
      - name: Fetch latest Namadillo tag
        id: check-tag
        run: |
          cd source-repo
          echo "Last Processed Tag. LAST_TAG=" 
          echo "LAST_TAG=" >> $GITHUB_ENV
          LATEST_TAG=$(git tag --sort=-creatordate | grep -E '^namadillo@' | head -n 1)
          echo "Latest tag from Namada: $LATEST_TAG"
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

          
          USER_INPUT_TAG="${{ inputs.build_tag }}"
          if [[ "$USER_INPUT_TAG" ]]; then
          Â  echo "LATEST_TAG=$USER_INPUT_TAG" >> "$GITHUB_ENV"
            echo "Using user input tag: $LATEST_TAG"
          fi

          FORCE_BUILD="${{ github.event.inputs.force_build || 'false' }}"
          echo "Force build: $FORCE_BUILD"

          if [[ "$LATEST_TAG" == "$LAST_TAG" && "$FORCE_BUILD" != "true" ]]; then
            echo "No new tag found. Exiting."
            exit 0
          fi
          echo "$LATEST_TAG" > ../.github/last_tag.txt
          echo "do_build=true" >> $GITHUB_ENV
          echo switching to $LATEST_TAG for the build process 
          git checkout $LATEST_TAG
      - name: Restore yarn cache
        if: env.do_build == 'true'
        uses: actions/cache@v3
        with:
          path: |
            ./source-repo/node_modules
            ./source-repo/apps/*/node_modules
            ./source-repo/packages/*/node_modules
            ./source-repo/e2e/node_modules
            ./source-repo/.cache/puppeteer
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: env.do_build == 'true'
        run: yarn
        shell: bash
        working-directory: source-repo

      - name: Install protoc
        if: env.do_build == 'true'
        run: sudo apt-get install -y protobuf-compiler

      - name: Build Namadillo
        if: env.do_build == 'true'
        working-directory: source-repo/apps/namadillo
        run: yarn build

      - name: Configure Namadillo
        if: env.do_build == 'true'
        working-directory: source-repo/apps/namadillo
        run: |
            echo "" > dist/config.toml
            echo "indexer_url = \"${{ env.INDEXER_URL }}\"" >> dist/config.toml
            echo "rpc_url = \"${{ env.RPC_URL }}\"" >> dist/config.toml
            echo "masp_indexer_url = \"${{ env.MASP_URL }}\"" >> dist/config.toml

      - name: Build the Chrome extension
        if: env.do_build == 'true'
        working-directory: source-repo/apps/extension
        run: yarn build:chrome
        env:
            NAMADA_INTERFACE_NAMADA_CHAIN_ID: ${{ env.CHAIN_ID }}

      - name: Build the Firefox extension
        if: env.do_build == 'true'
        working-directory: source-repo/apps/extension
        run: yarn build:firefox
        env:
            NAMADA_INTERFACE_NAMADA_CHAIN_ID: ${{ env.CHAIN_ID }}

      - name: Copy the extensions for deployment
        if: env.do_build == 'true'
        run: |
            cp source-repo/apps/extension/build/firefox/namada_keychain-*.zip source-repo/apps/namadillo/dist/namada-keychain-firefox.zip
            cp source-repo/apps/extension/build/chrome/namada_keychain-*.zip source-repo/apps/namadillo/dist/namada-keychain-chrome.zip

      - name: Clone Target repository
        if: env.do_build == 'true'
        uses: actions/checkout@v4
        with:
          repository: shield-crypto/namadillo-build
          ref: main
          path: target-repo
          ssh-key: ${{ secrets.GH_DEPLOY_KEY }}

      - name: Publish site
        if: env.do_build == 'true'
        run: |
            ls source-repo
            ls target-repo
            cd target-repo
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            echo clean up existing site
            rm -rf *
            git rm -r . || true  # Ignore if there is nothing to remove
            git commit -m "docs: Cleanup old version" || true # Prevent failure if nothing changed
            echo copying the new site
            cp -r ../source-repo/apps/namadillo/dist/* .
            git add .
            git commit -m "docs: Deploy version"
            git push origin main

      - name: Save last processed tag
        if: env.do_build == 'true'
        run: |
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            git add .github/last_tag.txt
            git commit -m "chore: update last built tag"
            git push origin main
