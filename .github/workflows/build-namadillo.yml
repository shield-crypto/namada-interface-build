name: Check & build Namadillo

on:
  schedule:
    - cron: "*/30 * * * *"  # Runs every 30 minutes

  workflow_dispatch:  # Allows manual trigger
env:
  INDEXER_URL: https://namada-indexer.shield-crypto.com
  RPC_URL: https://namada-public-rpc.shield-crypto.com
  MASP_URL: https://namada-public-masp.shield-crypto.com
  CHAIN_ID: namada.5f5de2dd1b88cba30586420

jobs:
  check-updates:
    runs-on: ubuntu-latest

    steps:
      - name: Clone source repository
        uses: actions/checkout@v4
        with:
          repository: anoma/namada-interface
          ref: main

      # run: |
      #   git clone --depth=1 https://github.com/anoma/namada-interface.git source-repo

      - name: Check for updates
        id: check
        run: |
          LATEST_COMMIT=$(git rev-parse HEAD)
          echo "Latest commit: $LATEST_COMMIT"
          
          # Compare with previous commit stored in GitHub cache
          CACHE_FILE="$HOME/latest_commit.txt"
          if [[ -f "$CACHE_FILE" && "$(cat $CACHE_FILE)" == "$LATEST_COMMIT" ]]; then
            echo "No new commits. Exiting."
            exit 0
          fi
          
          echo "$LATEST_COMMIT" > "$CACHE_FILE"
          echo "New changes detected!"
          echo "new_commits=true" >> $GITHUB_ENV
  
      - name: Install yarn dependencies
        if: env.new_commits == 'true'
        uses: ./.github/actions/yarn-cache

      - name: Restore Rust cache
        if: env.new_commits == 'true'
        uses: ./.github/actions/rust-cache
        with:
          cache-name: build
  
      - name: Install protoc
        if: env.new_commits == 'true'
        run: sudo apt-get install -y protobuf-compiler
  
      - name: Build Namadillo
        if: env.new_commits == 'true'
        working-directory: ./apps/namadillo
        run: yarn build
  
      - name: Configure Namadillo
        if: env.new_commits == 'true'
        working-directory: ./apps/namadillo
        run: |
            echo "" > dist/config.toml
            echo "indexer_url = \"${{ env.INDEXER_URL }}\"" >> dist/config.toml
            echo "rpc_url = \"${{ env.RPC_URL }}\"" >> dist/config.toml
            echo "masp_indexer_url = \"${{ env.MASP_URL }}\"" >> dist/config.toml
             
  
      - name: Build the Chrome extension
        if: env.new_commits == 'true'
        working-directory: ./apps/extension
        run: yarn build:chrome
        env:
            NAMADA_INTERFACE_NAMADA_CHAIN_ID: ${{ env.CHAIN_ID }}
  
      - name: Build the Firefox extension
        if: env.new_commits == 'true'
        working-directory: ./apps/extension
        run: yarn build:firefox
        env:
            NAMADA_INTERFACE_NAMADA_CHAIN_ID: ${{ env.CHAIN_ID }}
  
      - name: Copy the extensions for deployment
        if: env.new_commits == 'true'
        run: |
            cp apps/extension/build/firefox/namada_keychain-*.zip apps/namadillo/dist/namada-keychain-firefox.zip
            cp apps/extension/build/chrome/namada_keychain-*.zip apps/namadillo/dist/namada-keychain-chrome.zip
  
      - name: Deploy
        if: env.new_commits == 'true'
        uses: s0/git-publish-subdir-action@develop
        env:
            REPO: git@github.com:shield-crypto/namadillo-build.git
            BRANCH: main
            FOLDER: "./apps/namadillo/dist"
            SSH_PRIVATE_KEY: ${{ secrets.GH_DEPLOY_KEY }}
      
      
          
     