name: Check & build Namadillo

on:
  schedule:
    - cron: "0 */3 * * *"  # Runs every 3 hours
            

  workflow_dispatch:
    inputs:
      force_build:
        description: "Force the build, ignoring the last commit check"
        required: false
        default: "false"
        type: choice
        options:
          - "true"
          - "false"
env:
  INDEXER_URL: https://namada-indexer.shield-crypto.com
  RPC_URL: https://namada-public-rpc.shield-crypto.com
  MASP_URL: https://namada-public-masp.shield-crypto.com
  CHAIN_ID: namada.5f5de2dd1b88cba30586420

jobs:
  check-updates:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4

      - name: Cache Last Commit
        id: cache-primes
        uses: actions/cache@v4
        with:
            path: last_commit.txt
            key: ${{ runner.os }}-last_commit
      
      - name: Restore last processed commit hash
        id: cache-last-commit
        run: |
          if [[ -f last_commit.txt ]]; then
            echo "Restoring last commit hash:"
            cat last_commit.txt
          else
            echo "No cache found, initializing..."
            echo "" > last_commit.txt
          fi
      
      - name: Clone source repository
        uses: actions/checkout@v4
        with:
          repository: anoma/namada-interface
          ref: main
          path: source-repo

      # run: |
      #   git clone --depth=1 https://github.com/anoma/namada-interface.git source-repo

      - name: Check for updates
        id: check
        run: |
          cd source-repo
          LATEST_COMMIT=$(git rev-parse HEAD)
          echo "Latest commit: $LATEST_COMMIT"

          FORCE_BUILD=${{ github.event.inputs.force_build }}
          echo "Force build: $FORCE_BUILD"

          # Check if last_commit.txt exists
          if [[ -f ../last_commit.txt ]]; then
            LAST_COMMIT=$(cat ../last_commit.txt)
          else
            LAST_COMMIT=""
          fi

          if [[ "$LATEST_COMMIT" == "$LAST_COMMIT" && "$FORCE_BUILD" != "true" ]]; then
            echo "No new commits found. Exiting."
            exit 0
          fi

          echo "$LATEST_COMMIT" > ../last_commit.txt
          echo "do_build=true" >> $GITHUB_ENV
  
      - name: Restore yarn cache
        if: env.do_build == 'true'
        uses: actions/cache@v3
        with:
          path: |
            ./source-repo/node_modules
            ./source-repo/apps/*/node_modules
            ./source-repo/packages/*/node_modules
            ./source-repo/e2e/node_modules
            ./source-repo/.cache/puppeteer
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: env.do_build == 'true'
        run: yarn
        shell: bash
        working-directory: source-repo 

  
      - name: Install protoc
        if: env.do_build == 'true'
        run: sudo apt-get install -y protobuf-compiler
  
      - name: Build Namadillo
        if: env.do_build == 'true'
        working-directory: source-repo/apps/namadillo
        run: yarn build
  
      - name: Configure Namadillo
        if: env.do_build == 'true'
        working-directory: source-repo/apps/namadillo
        run: |
            echo "" > dist/config.toml
            echo "indexer_url = \"${{ env.INDEXER_URL }}\"" >> dist/config.toml
            echo "rpc_url = \"${{ env.RPC_URL }}\"" >> dist/config.toml
            echo "masp_indexer_url = \"${{ env.MASP_URL }}\"" >> dist/config.toml
             
  
      - name: Build the Chrome extension
        if: env.do_build == 'true'
        working-directory: source-repo/apps/extension
        run: yarn build:chrome
        env:
            NAMADA_INTERFACE_NAMADA_CHAIN_ID: ${{ env.CHAIN_ID }}
  
      - name: Build the Firefox extension
        if: env.do_build == 'true'
        working-directory: source-repo/apps/extension
        run: yarn build:firefox
        env:
            NAMADA_INTERFACE_NAMADA_CHAIN_ID: ${{ env.CHAIN_ID }}
  
      - name: Copy the extensions for deployment
        if: env.do_build == 'true'
        run: |
            cp source-repo/apps/extension/build/firefox/namada_keychain-*.zip source-repo/apps/namadillo/dist/namada-keychain-firefox.zip
            cp source-repo/apps/extension/build/chrome/namada_keychain-*.zip source-repo/apps/namadillo/dist/namada-keychain-chrome.zip
  
      - name: Clone Target repository
        if: env.do_build == 'true'
        uses: actions/checkout@v4
        with:
          repository: anoma/namada-interface
          ref: main
          path: target-repo
          ssh-key: ${{ secrets.GH_DEPLOY_KEY }}
        
      - name: Clean the target repository
        if: env.do_build == 'true'
        run: |
            cd target-repo
            rm -rf *
            git commit -m "Cleanup target repository"    

      - name: Copy build output to target repo
        if: env.do_build == 'true'
        run: |
              cp -r source-repo/apps/namadillo/dist/* target-repo/      
      
      - name: Commit and push the changes
        if: env.do_build == 'true'
        run: |
                cd target-repo
                git config --global user.name "GitHub Actions"
                git config --global user.email "actions@github.com"
                git add .
                git commit -m "Deploy new Namadillo version"
                git push origin main
      
      
      
          
     